
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIDENTIFICADORrightASIGNARleftSUMARESTAleftMULTDIVleftPOTENCIAMODULOrightsincostanleftPARIZQPARDERASIGNAR DIV ENTERO IDENTIFICADOR IGUAL MINUSMINUS MODULO MULT PARDER PARIZQ PLUSPLUS POTENCIA RESTA SUMA cos sin tandeclaracion : IDENTIFICADOR ASIGNAR expresiondeclaracion : expresion\n    expresion   :   expresion SUMA expresion\n                |   expresion RESTA expresion\n                |   expresion MULT expresion\n                |   expresion DIV expresion\n                |   expresion POTENCIA expresion\n                |   expresion MODULO expresion\n\n    expresion : sin PARIZQ expresion PARDER\n                | cos PARIZQ expresion PARDER\n                | tan PARIZQ expresion PARDERexpresion  : PARIZQ expresion PARDERexpresion : ENTERO'
    
_lr_action_items = {'IDENTIFICADOR':([0,],[2,]),'sin':([0,5,9,10,11,12,13,14,15,16,18,19,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'cos':([0,5,9,10,11,12,13,14,15,16,18,19,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'tan':([0,5,9,10,11,12,13,14,15,16,18,19,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'PARIZQ':([0,4,5,6,7,9,10,11,12,13,14,15,16,18,19,],[5,16,5,18,19,5,5,5,5,5,5,5,5,5,5,]),'ENTERO':([0,5,9,10,11,12,13,14,15,16,18,19,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'$end':([1,3,8,20,21,22,23,24,25,26,28,31,32,33,],[0,-2,-13,-1,-3,-4,-5,-6,-7,-8,-12,-9,-10,-11,]),'ASIGNAR':([2,],[9,]),'SUMA':([3,8,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,],[10,-13,10,10,-3,-4,-5,-6,-7,-8,10,-12,10,10,-9,-10,-11,]),'RESTA':([3,8,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,],[11,-13,11,11,-3,-4,-5,-6,-7,-8,11,-12,11,11,-9,-10,-11,]),'MULT':([3,8,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,],[12,-13,12,12,12,12,-5,-6,-7,-8,12,-12,12,12,-9,-10,-11,]),'DIV':([3,8,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,],[13,-13,13,13,13,13,-5,-6,-7,-8,13,-12,13,13,-9,-10,-11,]),'POTENCIA':([3,8,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,],[14,-13,14,14,14,14,14,14,-7,-8,14,-12,14,14,-9,-10,-11,]),'MODULO':([3,8,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,],[15,-13,15,15,15,15,15,15,-7,-8,15,-12,15,15,-9,-10,-11,]),'PARDER':([8,17,21,22,23,24,25,26,27,28,29,30,31,32,33,],[-13,28,-3,-4,-5,-6,-7,-8,31,-12,32,33,-9,-10,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaracion':([0,],[1,]),'expresion':([0,5,9,10,11,12,13,14,15,16,18,19,],[3,17,20,21,22,23,24,25,26,27,29,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> declaracion","S'",1,None,None,None),
  ('declaracion -> IDENTIFICADOR ASIGNAR expresion','declaracion',3,'p_declaracion_igual','analizador_sintactico.py',23),
  ('declaracion -> expresion','declaracion',1,'p_declaracion_expr','analizador_sintactico.py',27),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresion_operaciones','analizador_sintactico.py',33),
  ('expresion -> expresion RESTA expresion','expresion',3,'p_expresion_operaciones','analizador_sintactico.py',34),
  ('expresion -> expresion MULT expresion','expresion',3,'p_expresion_operaciones','analizador_sintactico.py',35),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_operaciones','analizador_sintactico.py',36),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_operaciones','analizador_sintactico.py',37),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_operaciones','analizador_sintactico.py',38),
  ('expresion -> sin PARIZQ expresion PARDER','expresion',4,'p_expresion_trig','analizador_sintactico.py',59),
  ('expresion -> cos PARIZQ expresion PARDER','expresion',4,'p_expresion_trig','analizador_sintactico.py',60),
  ('expresion -> tan PARIZQ expresion PARDER','expresion',4,'p_expresion_trig','analizador_sintactico.py',61),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresion_grupo','analizador_sintactico.py',70),
  ('expresion -> ENTERO','expresion',1,'p_expresion_numero','analizador_sintactico.py',75),
]
